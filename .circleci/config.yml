# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:

  make_environment:
    working_directory: /tmp/src/PyMARE
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/PyMARE
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ checksum "pymare/info.py" }}
      - run:  # will overwrite PyMARE installation each time
          name: Generate environment
          command:  |
            if [[ -e /opt/conda/envs/testenv ]]; then
                echo "Restoring environment from cache"
                source activate testenv
            else
                conda create -n testenv python=3.6 -yq
                source activate testenv
                pip install -e .[all]
            fi
            python setup.py install --user
      - save_cache:  # environment cache tied to requirements
          key: deps9-{{ checksum "pymare/info.py" }}
          paths:
            - "/opt/conda/envs/testenv"

  coverage_and_tests:
    working_directory: /tmp/src/PyMARE
    docker:
      - image: continuumio/miniconda3
    steps:
      - attach_workspace:  # get PyMARE
          at: /tmp
      - restore_cache:  # load environment
          key: deps9-{{ checksum "pymare/info.py" }}
      - run:
          name: Coverage
          command:  |
            apt-get update
            apt-get install -yqq curl
            source activate testenv
            py.test --cov-report xml:coverage.xml --cov=pymare --ignore=pymare/tests/test_stan_estimators.py pymare
      - codecov/upload:
          file: /tmp/src/PyMARE/coverage.xml

workflows:
  version: 2.1
  build_test_deploy:
    jobs:
      - make_environment:
          filters:
            tags:
              only: /.*/
      - coverage_and_tests:
          requires:
            - make_environment
          filters:
            tags:
              only: /.*/

