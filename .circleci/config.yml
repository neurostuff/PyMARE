# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:

  make_environment:
    working_directory: /tmp/src/PyMARE
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - persist_to_workspace:
          root: /tmp
          paths:
              - src/PyMARE
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ checksum "pymare/info.py" }}
      - run:  # will overwrite PyMARE installation each time
          name: Generate environment
          command:  |
            if [[ -e /opt/conda/envs/testenv ]]; then
                echo "Restoring environment from cache"
                source activate testenv
            else
                conda create -n testenv python=3.6 -yq
                source activate testenv
                pip install -e .[all]
            fi
            python setup.py install --user
      - save_cache:  # environment cache tied to requirements
          key: deps9-{{ checksum "pymare/info.py" }}
          paths:
            - "/opt/conda/envs/testenv"

  build_docs:
    working_directory: /tmp/src/PyMARE
    docker:
      - image: continuumio/miniconda3
    steps:
      - attach_workspace:  # get PyMARE
          at: /tmp
      - restore_cache:  # load environment
          key: deps9-{{ checksum "pymare/info.py" }}
      - run:
          name: Build documentation
          command: |
            apt-get install -yqq make
            source activate testenv
            make -C docs html
      - store_artifacts:
          path: /tmp/src/PyMARE/docs/_build/html

  coverage_and_tests:
    working_directory: /tmp/src/PyMARE
    docker:
      - image: continuumio/miniconda3
    steps:
      - attach_workspace:  # get PyMARE
          at: /tmp
      - restore_cache:  # load environment
          key: deps9-{{ checksum "pymare/info.py" }}
      - run:
          name: Coverage
          command:  |
            apt-get install -yqq curl
            source activate testenv
            py.test --cov-report xml:coverage.xml --cov=pymare --ignore=pymare/tests/test_stan_estimators.py pymare
      - codecov/upload:
          file: /tmp/src/PyMARE/coverage.xml

  deploy:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create package
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            pip install twine
            twine upload dist/*

workflows:
  version: 2.1
  build_test_deploy:
    jobs:
      - make_environment:
          filters:
            tags:
              only: /.*/
      - build_docs:
          requires:
            - make_environment
          filters:
            tags:
              only: /.*/
      - coverage_and_tests:
          requires:
            - make_environment
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - coverage_and_tests
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
